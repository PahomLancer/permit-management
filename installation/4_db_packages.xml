<?xml version="1.0" encoding="UTF-8"?><COMPONENTS author="adidenko" description="" name="dev-apps.onevizion.com_BPL_10162022194101.xml" site="https&#x3a;&#x2f;&#x2f;dev-apps.onevizion.com" ts="" ><DB_PACKAGES>
 <DB_PACKAGES_ITEM>
  <DB_PKG_NAME>PKG_PERMIT_MANAGMENT</DB_PKG_NAME>
  <PKG_NAME>PKG_PERMIT_MANAGMENT</PKG_NAME>
  <DB_PACKAGE_SPEC>CREATE OR REPLACE EDITIONABLE PACKAGE &quot;PKG_PERMIT_MANAGMENT&quot; as
    c_wp_template_name constant varchar2(4000) := &apos;Permit Workplan&apos;;
    procedure calc_permit_countdown_and_expected(p_permit_id in number);
    procedure calc_permit_expected(p_permit_id in number);
    procedure calc_permit_age(p_permit_id in number);
    procedure calc_permit_cycle_time(p_permit_id in number);
    procedure calc_permit_expires_before_cx_s(p_permit_id in number, p_fa_date in date, p_fp_date in date);
    procedure calc_permit_expired_and_days_to_expiration(p_permit_id in number);
    procedure new_permit(p_permit_id in number);
/*
Used objects
trackor type
id.permits.tt
id.project.tt
fields
id.permits.cf.prm_permit_countdown
id.permits.cf.prm_permit_expected
id.permits.cf.prm_permit_status
id.permits.cf.prm_permit_age
id.permits.cf.prm_permit_cycle_time
id.permits.cf.prm_expiration_date
id.permits.cf.prm_permit_expires_before_cx_s
id.permits.cf.prm_days_to_expiration
id.permits.cf.prm_permit_expired
workplan
Permit Workplan
*/
end;</DB_PACKAGE_SPEC>
  <DB_PACKAGE_BODY>CREATE OR REPLACE EDITIONABLE PACKAGE BODY &quot;PKG_PERMIT_MANAGMENT&quot; as

    procedure calc_permit_countdown_and_expected(p_permit_id in number) as
        v_500_pf date;
        v_500_af date;
        v_300_af date;
        v_wp_id number;
    begin
        begin
            select wp_workplan_id
              into v_wp_id
              from wp_workplan
             where active = 1
               and xitor_id = p_permit_id
               and template_name = c_wp_template_name
               and rownum = 1;
        exception when no_data_found then
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_countdown, null);
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_expected, null, 1);
            return;
        end;
    
        v_300_af := util.gettaskdatebyorddateonly(v_wp_id, p_permit_id, 300, &apos;A&apos;, &apos;F&apos;);  
        if util.getvalnumbyid(p_permit_id, id.permits.cf.prm_permit_status) in (id.vt.v_prm_permit_status.cancelled, id.vt.v_prm_permit_status.rejected)
        or v_300_af is null 
        then
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_countdown, null);
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_expected, null, 1);
            return;
        end if;
    
        v_500_af := util.gettaskdatebyorddateonly(v_wp_id, p_permit_id, 500, &apos;A&apos;, &apos;F&apos;);
        v_500_pf := util.gettaskdatebyorddateonly(v_wp_id, p_permit_id, 500, &apos;P&apos;, &apos;F&apos;);
        if v_500_af is not null then
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_countdown, 0);
        else
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_countdown, round(v_500_pf - current_date));
        end if;
    end calc_permit_countdown_and_expected;
    
    procedure calc_permit_expected(p_permit_id in number) as
        v_wp_id number;
        v_500_af date;
        v_300_af date;
        v_permit_countdown number;
    begin
        begin
            select wp_workplan_id
              into v_wp_id
              from wp_workplan
             where active = 1
               and xitor_id = p_permit_id
               and template_name = c_wp_template_name
               and rownum = 1;
        exception when no_data_found then
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_expected, null, 1);
            return;
        end;

        v_500_af := util.gettaskdatebyorddateonly(v_wp_id, p_permit_id, 500, &apos;A&apos;, &apos;F&apos;);
        v_300_af := util.gettaskdatebyorddateonly(v_wp_id, p_permit_id, 300, &apos;A&apos;, &apos;F&apos;);
        v_permit_countdown := util.getvalnumbyid(p_permit_id, id.permits.cf.prm_permit_countdown);
        if util.getvalnumbyid(p_permit_id, id.permits.cf.prm_permit_status) in (id.vt.v_prm_permit_status.cancelled, id.vt.v_prm_permit_status.rejected)
        or v_500_af is not null
        or v_300_af is null
        or v_permit_countdown is null
        then
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_expected, null, 1);
            return;
        end if;

        case
            when v_permit_countdown &lt; 0 then util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_expected, id.vt.v_prm_permits_due.past_due, 1);
            when v_permit_countdown &lt;= 7 then util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_expected, id.vt.v_prm_permits_due.seven_days, 1);
            when v_permit_countdown &lt;= 30 then util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_expected, id.vt.v_prm_permits_due.thirty_days, 1);
            when v_permit_countdown &lt;= 60 then util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_expected, id.vt.v_prm_permits_due.sixty_days, 1);
            when v_permit_countdown &lt;= 90 then util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_expected, id.vt.v_prm_permits_due.ninety_days, 1);
            else util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_expected, id.vt.v_prm_permits_due.over_ninety_days, 1);
        end case;
    end calc_permit_expected;
    
    procedure calc_permit_age(p_permit_id in number) as
        v_300_af date;
        v_500_af date;
        v_wp_id number;
    begin
        begin
            select wp_workplan_id
              into v_wp_id
              from wp_workplan
             where active = 1
               and xitor_id = p_permit_id
               and template_name = c_wp_template_name
               and rownum = 1;
        exception when no_data_found then
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_age, null);
            return;
        end;
        
        v_300_af := util.gettaskdatebyorddateonly(v_wp_id, p_permit_id, 300, &apos;A&apos;, &apos;F&apos;);
        v_500_af := util.gettaskdatebyorddateonly(v_wp_id, p_permit_id, 500, &apos;A&apos;, &apos;F&apos;);
        if v_300_af is null 
        or v_500_af is not null
        or util.getvalnumbyid(p_permit_id, id.permits.cf.prm_permit_status) in (id.vt.v_prm_permit_status.cancelled, id.vt.v_prm_permit_status.rejected) 
        then
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_age, 0);
        else
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_age, round(current_date - v_300_af));
        end if;
    end calc_permit_age;
    
    procedure calc_permit_cycle_time(p_permit_id in number) as
        v_300_af date;
        v_500_pf date;
        v_wp_id number;
    begin
        begin
            select wp_workplan_id
              into v_wp_id
              from wp_workplan
             where active = 1
               and xitor_id = p_permit_id
               and template_name = c_wp_template_name
               and rownum = 1;
        exception when no_data_found then
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_cycle_time, 0);
            return;
        end;
        v_300_af := util.gettaskdatebyorddateonly(v_wp_id, p_permit_id, 300, &apos;A&apos;, &apos;F&apos;);
        v_500_pf := util.gettaskdatebyorddateonly(v_wp_id, p_permit_id, 500, &apos;P&apos;, &apos;F&apos;);
        if v_300_af is null then
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_cycle_time, 0);
            return;
        end if;
        util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_cycle_time, round(v_500_pf - v_300_af));
    end calc_permit_cycle_time;
    
    procedure calc_permit_expires_before_cx_s(p_permit_id in number, p_fa_date in date, p_fp_date in date) as
        v_exp_date date;
    begin
        v_exp_date := util.getvaldatebyid(p_permit_id, id.permits.cf.prm_expiration_date);
        if p_fa_date is not null 
        or p_fp_date is null 
        or v_exp_date is null 
        then
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_expires_before_cx_s, 0);
            return;
        end if;
        if v_exp_date &lt; p_fp_date then
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_expires_before_cx_s, 1);
        else
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_expires_before_cx_s, 0);
        end if;
    end calc_permit_expires_before_cx_s;
    
    procedure calc_permit_expired_and_days_to_expiration(p_permit_id in number) as
        v_task_date date;
        v_exp_date date;
        v_parent_id number;
    begin
        v_exp_date := util.getvaldatebyid(p_permit_id, id.permits.cf.prm_expiration_date);
        if v_exp_date is null then
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_expired, 0);
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_days_to_expiration, null);
            return;
        end if;
        v_parent_id := util.getparentbyid(p_permit_id, id.project.tt);
        begin
            select finish_actual_date
              into v_task_date
              from wp_tasks
             where xitor_id = v_parent_id
               and order_number = 7000 
               and rownum = 1;
        exception when no_data_found then
            v_task_date := null;
        end;
        if v_task_date is not null then
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_expired, 0);
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_days_to_expiration, 0);
            return;
        end if;
        if v_exp_date &gt; current_date then
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_expired, 0);
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_days_to_expiration, round(v_exp_date - current_date));
        else
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_expired, 1);
            util.setvalnumbyid(p_permit_id, id.permits.cf.prm_days_to_expiration, 0);
        end if;
    end calc_permit_expired_and_days_to_expiration;
    
    procedure new_permit(p_permit_id in number) as
        v_template_id number;
        v_wp_id number;
    begin
        select wp_workplan_id
          into v_template_id
          from wp_workplan
         where wp_workplan_id = template_workplan_id
           and template_name = c_wp_template_name;
        v_wp_id := pkg_wp.assign_wp(v_template_id, p_permit_id, c_wp_template_name, current_date, null, 1, v_wp_id);
        for rec in (
            select wp_task_id
              from wp_tasks
             where wp_workplan_id = v_wp_id 
               and order_number = 100
        ) loop
            util.settaskdate(rec.wp_task_id, &apos;A&apos;, &apos;F&apos;, current_date, 1);
        end loop;
        util.setvalnumbyid(p_permit_id, id.permits.cf.prm_permit_status, id.vt.v_prm_permit_status.in_progress, 1);
    end new_permit;
    
end pkg_permit_managment;</DB_PACKAGE_BODY>
  <DB_PACKAGE_ID>11413</DB_PACKAGE_ID>
  <PROGRAM_ID>1</PROGRAM_ID>
  <BPD_ITEMS/>
  <COMPONENT_PACKAGES>
   <T_BPL_COMP_PKG>
    <COMPONENT_ID>27</COMPONENT_ID>
    <OBJECT_ID>11413</OBJECT_ID>
    <COMPONENTS_PACKAGE_ID>101283</COMPONENTS_PACKAGE_ID>
    <NAME>Permit Management</NAME>
    <PROGRAM_ID>1</PROGRAM_ID>
    <BPD_ITEMS/>
    <IS_LOCKED>0</IS_LOCKED>
   </T_BPL_COMP_PKG>
  </COMPONENT_PACKAGES>
  <COMPONENT_LABELS/>
 </DB_PACKAGES_ITEM>
</DB_PACKAGES>
</COMPONENTS>